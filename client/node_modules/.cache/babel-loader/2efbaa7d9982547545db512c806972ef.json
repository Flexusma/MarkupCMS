{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\babel-loader\\lib\\index.js!B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue?vue&type=script&lang=js","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue","mtime":1610104024740},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24uYmluZC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkI6L0dpdGtyYWtlbi9NYXJrdXBDTVMvY2xpZW50L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IFBvc3RDYXJkIGZyb20gIkAvY29tcG9uZW50cy9Qb3N0Q2FyZCI7CmltcG9ydCBQb3N0U2VydmljZSBmcm9tICdAL3NlcnZpY2VzL1Bvc3RTZXJ2aWNlLmpzJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJQb3N0TGlzdCIsCiAgY29tcG9uZW50czogewogICAgUG9zdENhcmQ6IFBvc3RDYXJkCiAgfSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0UG9zdHNEYXRhKCk7IC8vIGNhbGwgZ2V0RXZlbnREYXRhKCkgd2hlbiB0aGUgaW5zdGFuY2UgaXMgY3JlYXRlZAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdHNEYXRhOiBmdW5jdGlvbiBnZXRQb3N0c0RhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIFVzZSB0aGUgZXZlbnRTZXJ2aWNlIHRvIGNhbGwgdGhlIGdldEV2ZW50cygpIG1ldGhvZAogICAgICAgICAgICAgICAgUG9zdFNlcnZpY2UuZ2V0UG9zdHMoKS50aGVuKGZ1bmN0aW9uIChwb3N0cykgewogICAgICAgICAgICAgICAgICBfdGhpcy5wb3N0cyA9IHBvc3RzOwogICAgICAgICAgICAgICAgfS5iaW5kKF90aGlzKSk7CgogICAgICAgICAgICAgIGNhc2UgMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUpOwogICAgICB9KSkoKTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue"],"names":[],"mappings":";;;AAgBA,OAAO,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP,MAAwB,2BAAxB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,UADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,QAAO,EAAP;AADU,GAFC;AAKb,EAAA,IALa,kBAKN;AACL,WAAO;AACL,MAAA,KAAK,EAAE;AADF,KAAP;AAGD,GATY;AAUb,EAAA,OAVa,qBAUH;AACR,SAAK,YAAL,GADQ,CACa;AACtB,GAZY;AAab,EAAA,OAAO,EAAE;AACD,IAAA,YADC,0BACc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB;AACA,gBAAA,WAAW,CAAC,QAAZ,GACC,IADD,CAEG,UAAA,KAAI,EAAK;AACR,kBAAA,KAAI,CAAC,KAAL,GAAW,KAAX;AACD,iBAFD,CAEG,IAFH,CAEQ,KAFR,CAFF;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQrB;AATO;AAbI,CAAf","sourcesContent":["<template>\r\n  <div class=\"posts\">\r\n    <h2 class=\"text-center m-3\">Neue Beitr√§ge</h2>\r\n    <div class=\"container-fluid is-multiline\">\r\n      <div v-for=\"post in posts\" :event=\"post\" :key=\"post.id\" class=\" is-one-quarter row\">\r\n        <router-link :to=\"`/post/${post.id}`\" class=\"col-md-auto\">\r\n          <PostCard :post=\"post\" />\r\n        </router-link>\r\n      </div>\r\n      <div v-if=\"posts.length===0\">\r\n        <p>No Posts available</p>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PostCard from \"@/components/PostCard\";\r\nimport PostService from '@/services/PostService.js';\r\nexport default {\r\n  name: \"PostList\",\r\n  components: {\r\n    PostCard\r\n  },\r\n  data() {\r\n    return {\r\n      posts: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getPostsData(); // call getEventData() when the instance is created\r\n  },\r\n  methods: {\r\n    async getPostsData() {\r\n      // Use the eventService to call the getEvents() method\r\n      PostService.getPosts()\r\n      .then(\r\n        (posts => {\r\n          this.posts=posts;\r\n        }).bind(this)\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.events {\r\n  margin-top: 100px;\r\n  text-align: center;\r\n}\r\n\r\na:hover{\r\n  text-decoration: none;\r\n}\r\n</style>"],"sourceRoot":""}]}