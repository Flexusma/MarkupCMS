{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\babel-loader\\lib\\index.js!B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue?vue&type=script&lang=js","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue","mtime":1610117355606},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZGF0ZS50by1zdHJpbmcuanMiOwppbXBvcnQgInJlZ2VuZXJhdG9yLXJ1bnRpbWUvcnVudGltZS5qcyI7CmltcG9ydCBfYXN5bmNUb0dlbmVyYXRvciBmcm9tICJCOi9HaXRrcmFrZW4vTWFya3VwQ01TL2NsaWVudC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7Ci8vIGltcG9ydCBFdmVudFNlcnZpY2UKaW1wb3J0IFBvc3RTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvUG9zdFNlcnZpY2UuanMnOwppbXBvcnQgSGVybyBmcm9tICJAL2NvbXBvbmVudHMvcGFydGlhbHMvSGVybyI7CmltcG9ydCBTcGlubmVyIGZyb20gIkAvY29tcG9uZW50cy9wYXJ0aWFscy9TcGlubmVyIjsKCnZhciBkYXRlRm9ybWF0ID0gcmVxdWlyZSgnZGF0ZWZvcm1hdCcpOwoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICdFdmVudFNpbmdsZScsCiAgY29tcG9uZW50czogewogICAgU3Bpbm5lcjogU3Bpbm5lciwKICAgIEhlcm86IEhlcm8KICB9LAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICAvLyBpbml0aWFsaXplIHRoZSBldmVudCBvYmplY3QKICAgIHJldHVybiB7CiAgICAgIGxvYWRlZDogZmFsc2UsCiAgICAgIHBvc3Q6IHVuZGVmaW5lZAogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB0aGlzLmdldEV2ZW50RGF0YSgpOwogIH0sCiAgbWV0aG9kczogewogICAgZ2V0RXZlbnREYXRhOiBmdW5jdGlvbiBnZXRFdmVudERhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIFBvc3RTZXJ2aWNlLmdldFBvc3RTaW5nbGUoX3RoaXMuJHJvdXRlLnBhcmFtcy5pZCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgICAgICAgICAgICAgIF90aGlzLnBvc3QgPSByZXM7CiAgICAgICAgICAgICAgICAgIF90aGlzLmxvYWRlZCA9IHRydWU7CiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfSwKICAgIGdldERhdGU6IGZ1bmN0aW9uIGdldERhdGUoZGF0YSkgewogICAgICBjb25zb2xlLmxvZyhkYXRhKTsKICAgICAgdmFyIGRhdGUgPSBuZXcgRGF0ZShEYXRlLnBhcnNlKGRhdGEpKTsKICAgICAgdmFyIGZkYXRlID0gZGF0ZUZvcm1hdChkYXRlLCAiZC5tbS55eXl5Iik7CiAgICAgIHJldHVybiBmZGF0ZTsKICAgIH0KICB9Cn07"},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue"],"names":[],"mappings":";;;AAkBA;AACA,OAAO,WAAP,MAAwB,2BAAxB;AACA,OAAO,IAAP,MAAiB,4BAAjB;AACA,OAAO,OAAP,MAAoB,+BAApB;;AAEA,IAAI,UAAS,GAAI,OAAO,CAAC,YAAD,CAAxB;;AACA,eAAe;AACb,EAAA,IAAI,EAAE,aADO;AAEb,EAAA,UAAU,EAAE;AAAC,IAAA,OAAO,EAAP,OAAD;AAAU,IAAA,IAAI,EAAJ;AAAV,GAFC;AAGb,EAAA,IAHa,kBAGN;AACL;AACA,WAAO;AACL,MAAA,MAAM,EAAE,KADH;AAEL,MAAA,IAAI,EAAE;AAFD,KAAP;AAID,GATY;AAUb,EAAA,OAVa,qBAUH;AACR,SAAK,YAAL;AACD,GAZY;AAab,EAAA,OAAO,EAAE;AACD,IAAA,YADC,0BACc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB,gBAAA,WAAW,CAAC,aAAZ,CAA0B,KAAI,CAAC,MAAL,CAAY,MAAZ,CAAmB,EAA7C,EAAiD,IAAjD,CAAsD,UAAC,GAAD,EAAS;AAC7D,kBAAA,OAAO,CAAC,GAAR,CAAY,GAAZ;AACE,kBAAA,KAAI,CAAC,IAAL,GAAU,GAAV;AACA,kBAAA,KAAI,CAAC,MAAL,GAAY,IAAZ;AACD,iBAJH;;AADmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMpB,KAPM;AAQP,IAAA,OARO,mBAQC,IARD,EAQM;AACX,MAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,UAAI,IAAG,GAAI,IAAI,IAAJ,CAAS,IAAI,CAAC,KAAL,CAAW,IAAX,CAAT,CAAX;AACA,UAAI,KAAI,GAAI,UAAU,CAAC,IAAD,EAAM,WAAN,CAAtB;AACA,aAAO,KAAP;AACD;AAbM;AAbI,CAAf","sourcesContent":["<template>\r\n  <div class=\"event-single\" v-if=\"loaded\">\r\n    <Hero :title=\"post.title\" :desc=\"getDate(post.creation_date)\"/>\r\n    <section class=\"event-content m-3\">\r\n      <div class=\"container-fluid\">\r\n        <h1 class=\"\">{{post.title}}</h1>\r\n        <span class=\"post-content\" v-html=\"post.content\">\r\n\r\n        </span>\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <div v-else class=\"text-center m-3\">\r\n    <Spinner/>\r\n    <h1>Loading...</h1>\r\n  </div>\r\n</template>\r\n<script>\r\n// import EventService\r\nimport PostService from '@/services/PostService.js';\r\nimport Hero from \"@/components/partials/Hero\";\r\nimport Spinner from \"@/components/partials/Spinner\";\r\n\r\nvar dateFormat = require('dateformat');\r\nexport default {\r\n  name: 'EventSingle',\r\n  components: {Spinner, Hero},\r\n  data() {\r\n    // initialize the event object\r\n    return {\r\n      loaded: false,\r\n      post: undefined,\r\n    }\r\n  },\r\n  created() {\r\n    this.getEventData();\r\n  },\r\n  methods: {\r\n    async getEventData() {\r\n      PostService.getPostSingle(this.$route.params.id).then((res) => {\r\n        console.log(res)\r\n          this.post=res;\r\n          this.loaded=true;\r\n        });\r\n    },\r\n    getDate(data){\r\n      console.log(data)\r\n      let date = new Date(Date.parse(data));\r\n      let fdate = dateFormat(date,\"d.mm.yyyy\");\r\n      return fdate;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style scoped>\r\n.post-content>>>img{\r\n  max-width: 100% !important;\r\n  height: auto;\r\n  border-radius: 10px;\r\n}\r\nbody{\r\n  background: #fff;\r\n}\r\nhtml{\r\n  background: #fff;\r\n}\r\n.event-content{\r\n  font-family: droid-serif, serif;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n</style>"],"sourceRoot":""}]}