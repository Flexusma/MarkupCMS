{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue?vue&type=template&id=6f5064de&scoped=true","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue","mtime":1610318500870},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\thread-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\templateLoader.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQogIDxkaXYgY2xhc3M9InBvc3RzIj4NCiAgICA8aDIgY2xhc3M9InRleHQtY2VudGVyIGxpc3QtdGl0bGUgbS0zIj5OZXVlIEJlaXRyw6RnZTwvaDI+DQogICAgPGRpdiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIGlzLW11bHRpbGluZSI+DQogICAgICA8ZGl2IGNsYXNzPSIgaXMtb25lLXF1YXJ0ZXIgcm93Ij4NCiAgICAgICAgPHJvdXRlci1saW5rIHYtZm9yPSJwb3N0IGluIHBvc3RzIiA6ZXZlbnQ9InBvc3QiIDprZXk9InBvc3QuaWQiIDp0bz0iYC9wb3N0LyR7cG9zdC5pZH1gIiBjbGFzcz0iY29sIHAtMCBtLTMgbWwtNCBtci00IG9uZS1jb250YWluZXIiPg0KICAgICAgICAgIDxQb3N0Q2FyZCA6cG9zdD0icG9zdCIvPg0KICAgICAgICA8L3JvdXRlci1saW5rPg0KICAgICAgPC9kaXY+DQogICAgICA8ZGl2IHYtaWY9InBvc3RzLmxlbmd0aD09PTAiIGNsYXNzPSJ0ZXh0LWNlbnRlciBtLTUiPg0KICAgICAgICA8aDE+S2VpbmUgQmVpdHLDpGdlIHZlcmbDvGdiYXI8L2gxPg0KICAgICAgPC9kaXY+DQogICAgPC9kaXY+DQogIDwvZGl2Pg0K"},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostList.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACvlI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MACf,CAAC,CAAC,CAAC,CAAC,CAAC;MACL,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;MAClC,CAAC,CAAC,CAAC,CAAC,CAAC;IACP,CAAC,CAAC,CAAC,CAAC,CAAC;EACP,CAAC,CAAC,CAAC,CAAC,CAAC","file":"B:/Gitkraken/MarkupCMS/client/src/components/PostList.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"posts\">\r\n    <h2 class=\"text-center list-title m-3\">Neue Beiträge</h2>\r\n    <div class=\"container-fluid is-multiline\">\r\n      <div class=\" is-one-quarter row\">\r\n        <router-link v-for=\"post in posts\" :event=\"post\" :key=\"post.id\" :to=\"`/post/${post.id}`\" class=\"col p-0 m-3 ml-4 mr-4 one-container\">\r\n          <PostCard :post=\"post\"/>\r\n        </router-link>\r\n      </div>\r\n      <div v-if=\"posts.length===0\" class=\"text-center m-5\">\r\n        <h1>Keine Beiträge verfügbar</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PostCard from \"@/components/PostCard\";\r\nimport PostService from '@/services/PostService.js';\r\nexport default {\r\n  name: \"PostList\",\r\n  components: {\r\n    PostCard\r\n  },\r\n  props:[\"showNonPublic\"],\r\n  data() {\r\n    return {\r\n      posts: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getPostsData(); // call getEventData() when the instance is created\r\n  },\r\n  methods: {\r\n    async getPostsData() {\r\n      // Use the eventService to call the getEvents() method\r\n      PostService.getPosts()\r\n      .then(\r\n        (posts => {\r\n          let showPosts = [];\r\n          if(this.showNonPublic)\r\n            posts.forEach((post)=>{\r\n              if(!post.public) showPosts.push(post);\r\n            });\r\n          else{\r\n            posts.forEach((post)=>{\r\n              if(post.public) showPosts.push(post);\r\n            });\r\n          }\r\n          this.posts=showPosts;\r\n        }).bind(this)\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.events {\r\n  margin-top: 100px;\r\n  text-align: center;\r\n}\r\n\r\na:hover{\r\n  text-decoration: none;\r\n}\r\n.list-title{\r\n  text-transform: uppercase;\r\n  font-family: Roboto,sans-serif;\r\n  font-weight:700;\r\n}\r\n.one-container{\r\n  min-width: 300px;\r\n}\r\n</style>"]}]}