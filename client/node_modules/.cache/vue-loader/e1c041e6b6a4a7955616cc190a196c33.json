{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue?vue&type=style&index=0&id=18067ec2&lang=css","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue","mtime":1610117280506},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQppbWd7DQogIG1heC13aWR0aDogMTAwJSAhaW1wb3J0YW50Ow0KICBib3JkZXItcmFkaXVzOiAxMHB4Ow0KfQ0KYm9keXsNCiAgYmFja2dyb3VuZDogI2ZmZjsNCn0NCmh0bWx7DQogIGJhY2tncm91bmQ6ICNmZmY7DQp9DQouZXZlbnQtY29udGVudHsNCiAgZm9udC1mYW1pbHk6IGRyb2lkLXNlcmlmLCBzZXJpZjsNCiAgZm9udC13ZWlnaHQ6IDQwMDsNCiAgZm9udC1zdHlsZTogbm9ybWFsOw0KfQ0K"},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\client\\src\\views\\PostSingle.vue"],"names":[],"mappings":";AAuDA,CAAC,CAAC,CAAC;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrB;AACA,CAAC,CAAC,CAAC,CAAC;EACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC;EACF,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClB;AACA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EAC/B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"B:/Gitkraken/MarkupCMS/client/src/views/PostSingle.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <div class=\"event-single\" v-if=\"loaded\">\r\n    <Hero :title=\"post.title\" :desc=\"getDate(post.creation_date)\"/>\r\n    <section class=\"event-content m-3\">\r\n      <div class=\"container-fluid\">\r\n        <h1 class=\"\">{{post.title}}</h1>\r\n        <span class=\"post-content\" v-html=\"post.content\">\r\n\r\n        </span>\r\n      </div>\r\n    </section>\r\n  </div>\r\n  <div v-else class=\"text-center m-3\">\r\n    <Spinner/>\r\n    <h1>Loading...</h1>\r\n  </div>\r\n</template>\r\n<script>\r\n// import EventService\r\nimport PostService from '@/services/PostService.js';\r\nimport Hero from \"@/components/partials/Hero\";\r\nimport Spinner from \"@/components/partials/Spinner\";\r\n\r\nvar dateFormat = require('dateformat');\r\nexport default {\r\n  name: 'EventSingle',\r\n  components: {Spinner, Hero},\r\n  data() {\r\n    // initialize the event object\r\n    return {\r\n      loaded: false,\r\n      post: undefined,\r\n    }\r\n  },\r\n  created() {\r\n    this.getEventData();\r\n  },\r\n  methods: {\r\n    async getEventData() {\r\n      PostService.getPostSingle(this.$route.params.id).then((res) => {\r\n        console.log(res)\r\n          this.post=res;\r\n          this.loaded=true;\r\n        });\r\n    },\r\n    getDate(data){\r\n      console.log(data)\r\n      let date = new Date(Date.parse(data));\r\n      let fdate = dateFormat(date,\"d.mm.yyyy\");\r\n      return fdate;\r\n    },\r\n  }\r\n}\r\n</script>\r\n<style>\r\nimg{\r\n  max-width: 100% !important;\r\n  border-radius: 10px;\r\n}\r\nbody{\r\n  background: #fff;\r\n}\r\nhtml{\r\n  background: #fff;\r\n}\r\n.event-content{\r\n  font-family: droid-serif, serif;\r\n  font-weight: 400;\r\n  font-style: normal;\r\n}\r\n</style>"]}]}