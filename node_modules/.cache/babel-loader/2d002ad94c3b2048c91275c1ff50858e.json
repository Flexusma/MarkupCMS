{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\node_modules\\babel-loader\\lib\\index.js!B:\\Gitkraken\\MarkupCMS\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!B:\\Gitkraken\\MarkupCMS\\node_modules\\vue-loader-v16\\dist\\index.js??ref--0-1!B:\\Gitkraken\\MarkupCMS\\src\\components\\PostList.vue?vue&type=script&lang=js","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\src\\components\\PostList.vue","mtime":1610318500870},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\vue-loader-v16\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZm9yLWVhY2guanMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5mdW5jdGlvbi5iaW5kLmpzIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5mb3ItZWFjaC5qcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIkI6L0dpdGtyYWtlbi9NYXJrdXBDTVMvbm9kZV9tb2R1bGVzL0BiYWJlbC9ydW50aW1lL2hlbHBlcnMvZXNtL2FzeW5jVG9HZW5lcmF0b3IiOwppbXBvcnQgUG9zdENhcmQgZnJvbSAiQC9jb21wb25lbnRzL1Bvc3RDYXJkIjsKaW1wb3J0IFBvc3RTZXJ2aWNlIGZyb20gJ0Avc2VydmljZXMvUG9zdFNlcnZpY2UuanMnOwpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIlBvc3RMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBQb3N0Q2FyZDogUG9zdENhcmQKICB9LAogIHByb3BzOiBbInNob3dOb25QdWJsaWMiXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgcG9zdHM6IFtdCiAgICB9OwogIH0sCiAgY3JlYXRlZDogZnVuY3Rpb24gY3JlYXRlZCgpIHsKICAgIHRoaXMuZ2V0UG9zdHNEYXRhKCk7IC8vIGNhbGwgZ2V0RXZlbnREYXRhKCkgd2hlbiB0aGUgaW5zdGFuY2UgaXMgY3JlYXRlZAogIH0sCiAgbWV0aG9kczogewogICAgZ2V0UG9zdHNEYXRhOiBmdW5jdGlvbiBnZXRQb3N0c0RhdGEoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICByZXR1cm4gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKCkgewogICAgICAgIHJldHVybiByZWdlbmVyYXRvclJ1bnRpbWUud3JhcChmdW5jdGlvbiBfY2FsbGVlJChfY29udGV4dCkgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgIC8vIFVzZSB0aGUgZXZlbnRTZXJ2aWNlIHRvIGNhbGwgdGhlIGdldEV2ZW50cygpIG1ldGhvZAogICAgICAgICAgICAgICAgUG9zdFNlcnZpY2UuZ2V0UG9zdHMoKS50aGVuKGZ1bmN0aW9uIChwb3N0cykgewogICAgICAgICAgICAgICAgICB2YXIgc2hvd1Bvc3RzID0gW107CiAgICAgICAgICAgICAgICAgIGlmIChfdGhpcy5zaG93Tm9uUHVibGljKSBwb3N0cy5mb3JFYWNoKGZ1bmN0aW9uIChwb3N0KSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKCFwb3N0WyJwdWJsaWMiXSkgc2hvd1Bvc3RzLnB1c2gocG9zdCk7CiAgICAgICAgICAgICAgICAgIH0pO2Vsc2UgewogICAgICAgICAgICAgICAgICAgIHBvc3RzLmZvckVhY2goZnVuY3Rpb24gKHBvc3QpIHsKICAgICAgICAgICAgICAgICAgICAgIGlmIChwb3N0WyJwdWJsaWMiXSkgc2hvd1Bvc3RzLnB1c2gocG9zdCk7CiAgICAgICAgICAgICAgICAgICAgfSk7CiAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgX3RoaXMucG9zdHMgPSBzaG93UG9zdHM7CiAgICAgICAgICAgICAgICB9LmJpbmQoX3RoaXMpKTsKCiAgICAgICAgICAgICAgY2FzZSAxOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwgX2NhbGxlZSk7CiAgICAgIH0pKSgpOwogICAgfQogIH0KfTs="},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\src\\components\\PostList.vue"],"names":[],"mappings":";;;;;AAgBA,OAAO,QAAP,MAAqB,uBAArB;AACA,OAAO,WAAP,MAAwB,2BAAxB;AACA,eAAe;AACb,EAAA,IAAI,EAAE,UADO;AAEb,EAAA,UAAU,EAAE;AACV,IAAA,QAAO,EAAP;AADU,GAFC;AAKb,EAAA,KAAK,EAAC,CAAC,eAAD,CALO;AAMb,EAAA,IANa,kBAMN;AACL,WAAO;AACL,MAAA,KAAK,EAAE;AADF,KAAP;AAGD,GAVY;AAWb,EAAA,OAXa,qBAWH;AACR,SAAK,YAAL,GADQ,CACa;AACtB,GAbY;AAcb,EAAA,OAAO,EAAE;AACD,IAAA,YADC,0BACc;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACnB;AACA,gBAAA,WAAW,CAAC,QAAZ,GACC,IADD,CAEG,UAAA,KAAI,EAAK;AACR,sBAAI,SAAQ,GAAI,EAAhB;AACA,sBAAG,KAAI,CAAC,aAAR,EACE,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAAQ;AACpB,wBAAG,CAAC,IAAI,UAAR,EAAiB,SAAS,CAAC,IAAV,CAAe,IAAf;AAClB,mBAFD,EADF,KAII;AACF,oBAAA,KAAK,CAAC,OAAN,CAAc,UAAC,IAAD,EAAQ;AACpB,0BAAG,IAAI,UAAP,EAAgB,SAAS,CAAC,IAAV,CAAe,IAAf;AACjB,qBAFD;AAGF;AACA,kBAAA,KAAI,CAAC,KAAL,GAAW,SAAX;AACD,iBAZD,CAYG,IAZH,CAYQ,KAZR,CAFF;;AAFmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkBrB;AAnBO;AAdI,CAAf","sourcesContent":["<template>\r\n  <div class=\"posts\">\r\n    <h2 class=\"text-center list-title m-3\">Neue Beiträge</h2>\r\n    <div class=\"container-fluid is-multiline\">\r\n      <div class=\" is-one-quarter row\">\r\n        <router-link v-for=\"post in posts\" :event=\"post\" :key=\"post.id\" :to=\"`/post/${post.id}`\" class=\"col p-0 m-3 ml-4 mr-4 one-container\">\r\n          <PostCard :post=\"post\"/>\r\n        </router-link>\r\n      </div>\r\n      <div v-if=\"posts.length===0\" class=\"text-center m-5\">\r\n        <h1>Keine Beiträge verfügbar</h1>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\nimport PostCard from \"@/components/PostCard\";\r\nimport PostService from '@/services/PostService.js';\r\nexport default {\r\n  name: \"PostList\",\r\n  components: {\r\n    PostCard\r\n  },\r\n  props:[\"showNonPublic\"],\r\n  data() {\r\n    return {\r\n      posts: []\r\n    };\r\n  },\r\n  created() {\r\n    this.getPostsData(); // call getEventData() when the instance is created\r\n  },\r\n  methods: {\r\n    async getPostsData() {\r\n      // Use the eventService to call the getEvents() method\r\n      PostService.getPosts()\r\n      .then(\r\n        (posts => {\r\n          let showPosts = [];\r\n          if(this.showNonPublic)\r\n            posts.forEach((post)=>{\r\n              if(!post.public) showPosts.push(post);\r\n            });\r\n          else{\r\n            posts.forEach((post)=>{\r\n              if(post.public) showPosts.push(post);\r\n            });\r\n          }\r\n          this.posts=showPosts;\r\n        }).bind(this)\r\n      );\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.events {\r\n  margin-top: 100px;\r\n  text-align: center;\r\n}\r\n\r\na:hover{\r\n  text-decoration: none;\r\n}\r\n.list-title{\r\n  text-transform: uppercase;\r\n  font-family: Roboto,sans-serif;\r\n  font-weight:700;\r\n}\r\n.one-container{\r\n  min-width: 300px;\r\n}\r\n</style>"],"sourceRoot":""}]}