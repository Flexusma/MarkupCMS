{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\node_modules\\babel-loader\\lib\\index.js!B:\\Gitkraken\\MarkupCMS\\node_modules\\eslint-loader\\index.js??ref--13-0!B:\\Gitkraken\\MarkupCMS\\src\\auth\\authGuard.js","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\src\\auth\\authGuard.js","mtime":1610356668725},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"B:\\Gitkraken\\MarkupCMS\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUuanMiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiQjovR2l0a3Jha2VuL01hcmt1cENNUy9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBBdXRoU2VydmljZSBmcm9tICJAL2F1dGgvYXV0aFNlcnZpY2UiOwppbXBvcnQgUGVybWlzc2lvbiBmcm9tICJAL2F1dGgvcGVybWlzc2lvbiI7CmltcG9ydCB7IGNvbnN0YW50IH0gZnJvbSAiQC9tYWluIjsKZXhwb3J0IHZhciBhdXRoR3VhcmQgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIHZhciBfcmVmID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlKHRvLCBmcm9tLCBuZXh0KSB7CiAgICB2YXIgcGVybSwgcmVzOwogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0KSB7CiAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBwZXJtID0gdG8ubWV0YS5wZXJtaXNzaW9uOwoKICAgICAgICAgICAgaWYgKCEocGVybSAhPT0gdW5kZWZpbmVkKSkgewogICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAxNDsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDQ7CiAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5pc0F1dGhVc2VyKCk7CgogICAgICAgICAgY2FzZSA0OgogICAgICAgICAgICByZXMgPSBfY29udGV4dC5zZW50OwogICAgICAgICAgICBpZiAoY29uc3RhbnQuZGVidWcpIGNvbnNvbGUubG9nKHJlcyk7CgogICAgICAgICAgICBpZiAoIXJlcy5pc0F1dGgpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIGlmIChjb25zdGFudC5kZWJ1ZykgY29uc29sZS5sb2cocmVzLnVzZXIucGVybWlzc2lvbiArICJ8IiArIHBlcm0pOwoKICAgICAgICAgICAgaWYgKCFQZXJtaXNzaW9uLmhhc1Blcm1pc3Npb24ocmVzLnVzZXIucGVybWlzc2lvbiwgcGVybSkpIHsKICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTE7CiAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgIH0KCiAgICAgICAgICAgIG5leHQoKTsKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgbmV4dCh7CiAgICAgICAgICAgICAgbmFtZTogImxvZ2luIgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgX2NvbnRleHQubmV4dCA9IDE2OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDE0OgogICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMTY7CiAgICAgICAgICAgIHJldHVybiBBdXRoU2VydmljZS5yb3V0ZUF1dGhDaGVjayhuZXh0KTsKCiAgICAgICAgICBjYXNlIDE2OgogICAgICAgICAgY2FzZSAiZW5kIjoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUpOwogIH0pKTsKCiAgcmV0dXJuIGZ1bmN0aW9uIGF1dGhHdWFyZChfeCwgX3gyLCBfeDMpIHsKICAgIHJldHVybiBfcmVmLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgfTsKfSgpOw=="},{"version":3,"sources":["B:/Gitkraken/MarkupCMS/src/auth/authGuard.js"],"names":["AuthService","Permission","constant","authGuard","to","from","next","perm","meta","permission","undefined","isAuthUser","res","debug","console","log","isAuth","user","hasPermission","name","routeAuthCheck"],"mappings":";;AAAA,OAAOA,WAAP,MAAwB,oBAAxB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,SAAQC,QAAR,QAAuB,QAAvB;AAGA,OAAO,IAAMC,SAAS;AAAA,qEAAG,iBAAOC,EAAP,EAAWC,IAAX,EAAiBC,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACXC,YAAAA,IADW,GACJH,EAAE,CAACI,IAAH,CAAQC,UADJ;;AAAA,kBAEdF,IAAI,KAAGG,SAFO;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAGOV,WAAW,CAACW,UAAZ,EAHP;;AAAA;AAGLC,YAAAA,GAHK;AAIT,gBAAGV,QAAQ,CAACW,KAAZ,EACAC,OAAO,CAACC,GAAR,CAAYH,GAAZ;;AALS,iBAMNA,GAAG,CAACI,MANE;AAAA;AAAA;AAAA;;AAOD,gBAAGd,QAAQ,CAACW,KAAZ,EACAC,OAAO,CAACC,GAAR,CAAYH,GAAG,CAACK,IAAJ,CAASR,UAAT,GAAoB,GAApB,GAAwBF,IAApC;;AARC,iBASEN,UAAU,CAACiB,aAAX,CAAyBN,GAAG,CAACK,IAAJ,CAASR,UAAlC,EAA8CF,IAA9C,CATF;AAAA;AAAA;AAAA;;AAUOD,YAAAA,IAAI;AAVX;;AAAA;AAcTA,YAAAA,IAAI,CAAC;AAACa,cAAAA,IAAI,EAAE;AAAP,aAAD,CAAJ;AAdS;AAAA;;AAAA;AAAA;AAAA,mBAiBXnB,WAAW,CAACoB,cAAZ,CAA2Bd,IAA3B,CAjBW;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAATH,SAAS;AAAA;AAAA;AAAA,GAAf","sourcesContent":["import AuthService from \"@/auth/authService\";\r\nimport Permission from \"@/auth/permission\";\r\nimport {constant} from \"@/main\";\r\n\r\n\r\nexport const authGuard = async (to, from, next) => {\r\n        const perm = to.meta.permission;\r\n        if(perm!==undefined){\r\n                let res = await AuthService.isAuthUser();\r\n                if(constant.debug)\r\n                console.log(res)\r\n                if(res.isAuth){\r\n                        if(constant.debug)\r\n                        console.log(res.user.permission+\"|\"+perm)\r\n                        if(Permission.hasPermission(res.user.permission, perm)){\r\n                                next();\r\n                                return;\r\n                        }\r\n                }\r\n                next({name: \"login\"});\r\n\r\n        }else\r\n        await AuthService.routeAuthCheck(next);\r\n\r\n};\r\n\r\n\r\n"]}]}