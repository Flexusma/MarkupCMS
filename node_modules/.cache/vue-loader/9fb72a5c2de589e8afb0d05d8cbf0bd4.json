{"remainingRequest":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader\\dist\\index.js??ruleSet[0].use[1]!B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostCard.vue?vue&type=style&index=0&id=040ef000&lang=scss&scoped=true","dependencies":[{"path":"B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostCard.vue","mtime":1608852452244},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader\\dist\\stylePostLoader.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\postcss-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\sass-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"B:\\Gitkraken\\MarkupCMS\\client\\node_modules\\vue-loader\\dist\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoucG9zdC1pdGVtIHsNCiAgcGFkZGluZzogMTBweCAyMHB4Ow0KICBtYXJnaW46IDIwcHggMDsNCiAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCAjRUVFOw0KICAmOmhvdmVyIHsNCiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGRkOw0KICB9DQp9DQoNCi5wb3N0LWl0ZW0taGVhZGVyIHsNCiAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkICMwMDA7DQp9DQoNCi5wb3N0LWl0ZW0tdGl0bGUgew0KICBmb250LXNpemU6IDJlbTsNCiAgY29sb3I6ICMyMjI7DQogIG1hcmdpbi1ib3R0b206IDAuMmVtOw0KICBmb250LXdlaWdodDogYm9sZDsNCn0NCg0KLnBvc3QtaXRlbS1jYXRlZ29yeSB7DQogIG1hcmdpbjogMCAwLjFlbTsNCiAgcGFkZGluZzogMC4zZW0gMWVtOw0KICBjb2xvcjogI2ZmZjsNCiAgYmFja2dyb3VuZDogIzAwMDsNCiAgZm9udC1zaXplOiA4MCU7DQogIHRleHQtZGVjb3JhdGlvbjogbm9uZTsNCn0NCg0KLnBvc3QtaXRlbS1tb3JlIHsNCiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTsNCiAgYm9yZGVyOiAxcHggc29saWQgIzAwMDsNCiAgcGFkZGluZzogMnB4IDhweDsNCiAgbWFyZ2luOiAwOw0KfQ0K"},{"version":3,"sources":["B:\\Gitkraken\\MarkupCMS\\client\\src\\components\\PostCard.vue"],"names":[],"mappings":";AA2CA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACT,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAC3B,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;IACN,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACxB;AACF;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAC/B;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACnB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAClB,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvB;;AAEA,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE;EACd,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;EACzB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACtB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;EAChB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;AACX","file":"B:/Gitkraken/MarkupCMS/client/src/components/PostCard.vue","sourceRoot":"","sourcesContent":["<template>\r\n  <section class=\"post-item\">\r\n    <header class=\"post-item-header\">\r\n      <p class=\"post-item-meta\">\r\n        <a v-if=\"post.creation_date!==undefined\" class=\"post-item-category category-js\">{{getDate(post.creation_date)}}</a>\r\n      </p>\r\n      <h2 v-if=\"post.title===undefined\" class=\"post-item-title\">Ladefehler</h2>\r\n      <h2 v-else class=\"post-item-title\">{{post.title}}</h2>\r\n\r\n    </header>\r\n\r\n    <div class=\"post-item-description\">\r\n      <p v-if=\"post.content===undefined\">\r\n        Es ist ein Fehler beim Laden des Inhalts aufgetreten :c\r\n      </p>\r\n      <p v-else>\r\n        {{getShort(post.content)}}\r\n      </p>\r\n\r\n    </div>\r\n\r\n    <footer class=\"post-item-footer\">\r\n      <a class=\"post-item-more\" href=\"#\">Read Full Post</a>\r\n    </footer>\r\n  </section>\r\n</template>\r\n<script>\r\nvar dateFormat = require('dateformat');\r\nexport default {\r\n  props: [\"post\"],\r\n  methods:{\r\n    getDate(data){\r\n     let date = new Date(Date.parse(data.replace(/[-]/g,'/')));\r\n     let fdate = dateFormat(date,\"d-mm-yyyy\");\r\n      return fdate;\r\n    },\r\n    getShort(data){\r\n      return data.slice(0,300);\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.post-item {\r\n  padding: 10px 20px;\r\n  margin: 20px 0;\r\n  border-left: 1px solid #EEE;\r\n  &:hover {\r\n    background-color: #ddd;\r\n  }\r\n}\r\n\r\n.post-item-header {\r\n  border-bottom: 2px solid #000;\r\n}\r\n\r\n.post-item-title {\r\n  font-size: 2em;\r\n  color: #222;\r\n  margin-bottom: 0.2em;\r\n  font-weight: bold;\r\n}\r\n\r\n.post-item-category {\r\n  margin: 0 0.1em;\r\n  padding: 0.3em 1em;\r\n  color: #fff;\r\n  background: #000;\r\n  font-size: 80%;\r\n  text-decoration: none;\r\n}\r\n\r\n.post-item-more {\r\n  text-transform: uppercase;\r\n  border: 1px solid #000;\r\n  padding: 2px 8px;\r\n  margin: 0;\r\n}\r\n</style>"]}]}