"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRoutes = void 0;
const lodash_1 = require("lodash");
const getRoutes = function (app) {
    const routes = {
        get: [],
        post: [],
        put: [],
        patch: [],
        delete: []
    };
    /* eslint-disable no-underscore-dangle */
    lodash_1.forOwn(app._router.stack, (middleware) => {
        /* eslint-enable no-underscore-dangle */
        if (!middleware.route) {
            return;
        }
        const { method } = middleware.route.stack[0], { path } = middleware.route;
        switch (method) {
            case 'get':
                routes.get.push(path);
                break;
            case 'post':
                routes.post.push(path);
                break;
            case 'put':
                routes.put.push(path);
                break;
            case 'patch':
                routes.patch.push(path);
                break;
            case 'delete':
                routes.delete.push(path);
                break;
            default:
                throw new Error(`Invalid method ${method}.`);
        }
    });
    return routes;
};
exports.getRoutes = getRoutes;
